service: storage

frameworkVersion: ">=1.8.0 <3.0.0"

provider:
  name: aws
  deploymentBucket:
    name: inventory-mgmt-sys-deployment-bkt

custom:
  frontendBucketName: inventory-mgmt-sys-frontend

resources:
  Resources:

    FrontEndS3: #upload front end to this bucket
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.frontendBucketName}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    FrontEndS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: FrontEndS3
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.frontendBucketName}/*

    InventoryDynamoDBTable: 
      Type: AWS::DynamoDB::Table
      Properties: 
        AttributeDefinitions: 
          - 
            AttributeName: "Id"
            AttributeType: "S"
          - 
            AttributeName: "Name"
            AttributeType: "S"
        KeySchema: 
          - 
            AttributeName: "Id"
            KeyType: "HASH"
          - 
            AttributeName: "Name"
            KeyType: "RANGE"
        ProvisionedThroughput: 
          ReadCapacityUnits: "5"
          WriteCapacityUnits: "5"
        TableName: "inventoryItemsTable"

  Outputs:
    InventoryTable:
      Value: 
        Ref: InventoryDynamoDBTable
      Export:
        Name: InventoryDynamoDBTable
    InventoryTableArn:
      Value: 
        'Fn::GetAtt': [ InventoryDynamoDBTable, Arn ]
      Export:
        Name: InventoryDynamoDBTableArn
    FrontEndS3DomainName:
      Value:
        'Fn::GetAtt': [ FrontEndS3, DomainName ]
      Export:
        Name: InventoryMgmtSysDomainName